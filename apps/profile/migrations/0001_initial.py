# Generated by Django 5.1.4 on 2025-01-25 21:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_host', models.CharField(default='smtp.gmail.com', max_length=255, verbose_name='SMTP Host')),
                ('email_port', models.IntegerField(default=587, verbose_name='SMTP Port')),
                ('email_use_tls', models.BooleanField(default=True, verbose_name='Use TLS')),
                ('email_host_user', models.EmailField(max_length=255, verbose_name='SMTP Username (Email)')),
                ('email_host_password', models.CharField(max_length=255, verbose_name='SMTP Password (App Password)')),
                ('default_from_email', models.EmailField(max_length=255, verbose_name='Default From Email')),
            ],
            options={
                'verbose_name': 'Email Configuration',
                'verbose_name_plural': 'Email Configurations',
            },
        ),
        migrations.CreateModel(
            name='PageConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='hero_images/', verbose_name='Hero Image')),
                ('hero_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Hero Title')),
                ('hero_subtitle', models.CharField(blank=True, max_length=500, null=True, verbose_name='Hero Subtitle')),
                ('hero_button_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Hero Button Text')),
                ('hero_button_link', models.URLField(blank=True, null=True, verbose_name='Hero Button Link')),
                ('about_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='About Title')),
                ('about_description', models.TextField(blank=True, null=True, verbose_name='About Description')),
                ('service_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Service Title')),
                ('service_description', models.TextField(blank=True, null=True, verbose_name='Service Description')),
                ('service_image', models.ImageField(blank=True, null=True, upload_to='service_images/', verbose_name='Service Image')),
                ('testimonials', models.JSONField(blank=True, null=True, verbose_name='Testimonials')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Contact Email')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Contact Phone')),
                ('contact_address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Contact Address')),
                ('footer_text', models.TextField(blank=True, null=True, verbose_name='Footer Text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Page Configuration',
                'verbose_name_plural': 'Page Configurations',
            },
        ),
        migrations.CreateModel(
            name='PaymentIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('cinetpay', 'CinetPay')], help_text='Fournisseur de service de paiement.', max_length=50, verbose_name='Fournisseur')),
                ('api_key', models.CharField(blank=True, help_text='Clé API fournie par le fournisseur de paiement.', max_length=255, null=True, verbose_name='Clé API')),
                ('secret_key', models.CharField(blank=True, help_text='Clé secrète fournie par le fournisseur de paiement.', max_length=255, null=True, verbose_name='Clé secrète')),
                ('currency', models.CharField(default='USD', help_text='Devise préférée pour les paiements.', max_length=10, verbose_name='Devise')),
                ('is_active', models.BooleanField(default=True, help_text='Active ou désactive cette intégration.', verbose_name='Actif')),
                ('metadata', models.JSONField(blank=True, help_text='Autres configurations spécifiques au fournisseur.', null=True, verbose_name='Métadonnées')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Intégration de paiement',
                'verbose_name_plural': 'Intégrations de paiement',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Template Name')),
                ('preview_image', models.ImageField(blank=True, null=True, upload_to='template_previews/', verbose_name='Preview Image')),
                ('file_path', models.FileField(help_text='Base HTML file for the template.', upload_to='templates/')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Company Name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Logo')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='company_favicons/', verbose_name='Favicon')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='ZIP Code')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('primary_color', models.CharField(blank=True, max_length=7, null=True, verbose_name='Primary Color')),
                ('secondary_color', models.CharField(blank=True, max_length=7, null=True, verbose_name='Secondary Color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_profiles', to='profile.template')),
            ],
            options={
                'verbose_name': 'Company Profile',
                'verbose_name_plural': 'Company Profiles',
            },
        ),
    ]
